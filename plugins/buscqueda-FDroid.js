import fetch from 'node-fetch';

let handler = async (m, { conn, text }) => {
    if (!text) return conn.reply(m.chat, '*‚ú® Ingresa un t√©rmino de b√∫squeda.*', m, rcanal);

    await m.react('üïì');
    try {
        const response = await fetch(`https://api.rynn-archive.biz.id/search/fdroid?q=${encodeURIComponent(text)}`);
        const data = await response.json();

        if (!data.status || !data.result || data.result.length === 0) {
            throw new Error('No se encontraron resultados para tu b√∫squeda.');
        }

        let txt = `*‰πÇ  S E A R C H  -  F D R O I D*\n\n`;
        for (const app of data.result) {
            txt += `    ‚ú©  *Nombre* : ${app.name}\n`;
            txt += `    ‚ú©  *Descripci√≥n* : ${app.description}\n`;
            txt += `    ‚ú©  *Licencia* : ${app.license}\n`;
            txt += `    ‚ú©  *Enlace* : ${app.link}\n\n`;
        }

        await conn.reply(m.chat, txt, m, rcanal);
        await m.react('‚úÖ');
    } catch (error) {
        console.error(error);
        await m.react('‚úñÔ∏è');
        await conn.reply(m.chat, 'Ocurri√≥ un error: ' + error.message, m);
    }
};

handler.help = ['fdroidsearch <t√©rmino>'];
handler.tags = ['search'];
handler.command = ['fdroidsearch'];
handler.register = true;

export default handler;